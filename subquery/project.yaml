# // Auto-generated , DO NOT EDIT
specVersion: 1.0.0
version: 0.0.1
name: Nodle-sksync-subquery
description: __
runner:
  node:
    name: '@subql/node-ethereum'
    version: '>=3.0.0'
  query:
    name: '@subql/query'
    version: '*'
schema:
  file: ./schema.graphql
network:
  chainId: '270'
  endpoint:
    - https://rpc-iu435q.nodleprotocol.io
dataSources:
  - kind: ethereum/Runtime
    startBlock: 1
    options:
      abi: erc721
      address: '0xf98633dd7a7af38a3da2c7fc34f1a7a3a14a26b9'
    assets:
      erc721:
        file: ./abis/erc721.abi.json
    mapping:
      file: ./dist/index.js
      handlers:
        - kind: ethereum/TransactionHandler
          handler: handleSafeMint
          filter:
            function: safeMint(address,string)
        - kind: ethereum/TransactionHandler
          handler: handleApprove
          filter:
            function: approve(address,uint256)
        - kind: ethereum/LogHandler
          handler: handleApproval
          filter:
            topics:
              - Approval(address,address,uint256)
        - kind: ethereum/LogHandler
          handler: handleApprovalForAll
          filter:
            topics:
              - ApprovalForAll(address,address,bool)
        - kind: ethereum/LogHandler
          handler: handleTransfer
          filter:
            topics:
              - Transfer(address from,address to,uint256 tokenId)
  - kind: ethereum/Runtime
    startBlock: 1
    options:
      abi: AccessControl
      address: '0x27d45764490b8C4135d1EC70130163791BDE6db5'
    assets:
      AccessControl:
        file: ./abis/accesscontrol.json
    mapping:
      file: ./dist/index.js
      handlers:
        - kind: ethereum/LogHandler
          handler: handleRoleAdminChanged
          filter:
            topics:
              - RoleAdminChanged(bytes32,bytes32,bytes32)
        - kind: ethereum/LogHandler
          handler: handleRoleGranted
          filter:
            topics:
              - RoleGranted(bytes32,address,address)
        - kind: ethereum/LogHandler
          handler: handleRoleRevoked
          filter:
            topics:
              - RoleRevoked(bytes32,address,address)
